// Generated by view binder compiler. Do not edit!
package com.example.contentprovider.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.contentprovider.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnOrder;

  @NonNull
  public final EditText eT1;

  @NonNull
  public final EditText eT2;

  @NonNull
  public final EditText eT3;

  @NonNull
  public final EditText et4;

  @NonNull
  public final LinearLayout main;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull Button btnOrder,
      @NonNull EditText eT1, @NonNull EditText eT2, @NonNull EditText eT3, @NonNull EditText et4,
      @NonNull LinearLayout main) {
    this.rootView = rootView;
    this.btnOrder = btnOrder;
    this.eT1 = eT1;
    this.eT2 = eT2;
    this.eT3 = eT3;
    this.et4 = et4;
    this.main = main;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnOrder;
      Button btnOrder = ViewBindings.findChildViewById(rootView, id);
      if (btnOrder == null) {
        break missingId;
      }

      id = R.id.eT1;
      EditText eT1 = ViewBindings.findChildViewById(rootView, id);
      if (eT1 == null) {
        break missingId;
      }

      id = R.id.eT2;
      EditText eT2 = ViewBindings.findChildViewById(rootView, id);
      if (eT2 == null) {
        break missingId;
      }

      id = R.id.eT3;
      EditText eT3 = ViewBindings.findChildViewById(rootView, id);
      if (eT3 == null) {
        break missingId;
      }

      id = R.id.et4;
      EditText et4 = ViewBindings.findChildViewById(rootView, id);
      if (et4 == null) {
        break missingId;
      }

      LinearLayout main = (LinearLayout) rootView;

      return new ActivityMainBinding((LinearLayout) rootView, btnOrder, eT1, eT2, eT3, et4, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
